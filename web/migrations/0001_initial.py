# Generated by Django 2.1.14 on 2019-12-18 05:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=100, verbose_name='表示名')),
                ('profile_image', models.FileField(blank=True, null=True, upload_to=web.models.get_file_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='プロフィール画像')),
                ('is_private', models.BooleanField(default=True, verbose_name='非公開ページ')),
                ('work_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='お仕事連絡用のメールアドレス')),
                ('profile', models.TextField(blank=True, max_length=400, verbose_name='プロフィール')),
                ('twitter_comment', models.CharField(blank=True, max_length=400, verbose_name='Twitterコメント')),
                ('instagram_comment', models.CharField(blank=True, max_length=400, verbose_name='Instagramコメント')),
                ('youtube_comment', models.CharField(blank=True, max_length=400, verbose_name='Youtubeコメント')),
                ('prefecture', models.CharField(blank=True, choices=[('HOKKAIDO', '北海道'), ('AOMORI', '青森'), ('IWATE', '岩手'), ('MIYAGI', '宮城'), ('AKITA', '秋田'), ('YAMAGATA', '山形'), ('FUKUSHIMA', '福島'), ('IBARAKI', '茨城'), ('TOCHIGI', '栃木'), ('GUNMA', '群馬'), ('SAITAMA', '埼玉'), ('CHIBA', '千葉'), ('TOKYO', '東京都'), ('KANAGAWA', '神奈川'), ('NIIGATA', '新潟'), ('TOYAMA', '富山'), ('ISHIKAWA', '石川'), ('FUKUI', '福井'), ('YAMANASHI', '山梨'), ('NAGANO', '長野'), ('GIFU', '岐阜'), ('SHIZUOKA', '静岡'), ('AICHI', '愛知'), ('MIE', '三重'), ('SHIGA', '滋賀'), ('KYOTO', '京都'), ('OSAKA', '大阪'), ('HYOGO', '兵庫'), ('NARAA', '奈良'), ('WAKAYAMA', '和歌山'), ('TOTTORI', '鳥取'), ('SHIMANE', '島根'), ('OKAYAMA', '岡山'), ('HIROSHIMA', '広島'), ('YAMAGUCHI', '山口'), ('TOKUSHIMA', '徳島'), ('KAGAWA', '香川'), ('EHIME', '愛媛'), ('KOCHI', '高知'), ('FUKUOKA', '福岡'), ('SAGA', '佐賀'), ('NAGASAKI', '長崎'), ('KUMAMOTO', '熊本'), ('OITA', '大分'), ('MIYAZAKI', '宮崎'), ('KAGOSHIMA', '鹿児島'), ('OKINAWA', '沖縄'), ('OVER_SEAS', '海外')], max_length=100, null=True, verbose_name='都道府県')),
                ('active_place', models.CharField(blank=True, max_length=400, verbose_name='活動エリア')),
                ('birth_place', models.CharField(blank=True, max_length=400, verbose_name='出身地')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='身長')),
                ('birth_day', models.DateField(blank=True, null=True, verbose_name='誕生日')),
                ('gender', models.CharField(blank=True, choices=[('MALE', '男'), ('FEMALE', '女'), ('OTHER', 'その他')], max_length=10, verbose_name='性別')),
                ('pr', models.TextField(blank=True, verbose_name='PR')),
                ('ssp_landscape', models.CharField(blank=True, max_length=100, null=True, verbose_name='SSP(縦長)')),
                ('ssp_post', models.CharField(blank=True, max_length=100, null=True, verbose_name='SSP(投稿)')),
                ('page_id', models.CharField(default=web.models.get_uuid_no_dash, editable=False, max_length=100, verbose_name='登録者ページID')),
                ('parent_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='親の登録者ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'アカウント',
                'verbose_name_plural': 'アカウント',
            },
        ),
        migrations.CreateModel(
            name='ActivityGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ジャンル名')),
                ('order', models.IntegerField(default=99, verbose_name='順序')),
            ],
            options={
                'verbose_name': '活動ジャンル',
                'verbose_name_plural': '活動ジャンル',
            },
        ),
        migrations.CreateModel(
            name='InstagramInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_id', models.CharField(max_length=100, verbose_name='INFO_ID')),
                ('url', models.CharField(max_length=400, verbose_name='URL')),
                ('type', models.CharField(choices=[('IG_TYPE_IMAGE', 'IMAGE'), ('IG_TYPE_VIDEO', 'VIDEO'), ('IG_TYPE_ALBUM', 'CAROUSEL_ALBUM')], max_length=100, verbose_name='Type')),
                ('thumbnail', models.CharField(blank=True, max_length=400, verbose_name='サムネイル')),
                ('publish_at', models.DateTimeField(blank=True, null=True, verbose_name='公開日')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instagram_list', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'InstagramのMedia情報',
                'verbose_name_plural': 'InstagramのMedia情報',
            },
        ),
        migrations.CreateModel(
            name='InstagramToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=400, verbose_name='アクセストークン')),
                ('name', models.CharField(max_length=400, verbose_name='ユーザID')),
                ('type', models.CharField(blank=True, max_length=400, verbose_name='トークンタイプ')),
                ('expire', models.IntegerField(default=0, verbose_name='有効期限')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Instagramトークン',
                'verbose_name_plural': 'Instagramトークン',
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(choices=[('KEY_SSP_LANDSCAPE', 'SSP_LANDSCAPE'), ('KEY_SSP_POST', 'SSP_POST'), ('KEY_SSP_GA_TAG', 'GA_TAG'), ('KEY_OGP_IMAGE_URL', 'OGP_IMAGE_URL')], max_length=100, unique=True)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'システム設定',
                'verbose_name_plural': 'システム設定',
            },
        ),
        migrations.CreateModel(
            name='TwitterToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_id', models.CharField(max_length=100, unique=True, verbose_name='userId')),
                ('twitter_name', models.CharField(max_length=100, verbose_name='displayName')),
                ('token', models.CharField(max_length=100, verbose_name='access_token')),
                ('secret', models.CharField(max_length=100, verbose_name='secret_token')),
            ],
            options={
                'verbose_name': 'Twitterトークン',
                'verbose_name_plural': 'Twitterトークン',
            },
        ),
        migrations.CreateModel(
            name='YoutubeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_id', models.CharField(max_length=100, verbose_name='ID')),
                ('url', models.CharField(max_length=400, verbose_name='URL')),
                ('thumbnail', models.CharField(blank=True, max_length=400, verbose_name='サムネイル')),
                ('time', models.CharField(blank=True, max_length=50, verbose_name='再生時間')),
                ('title', models.CharField(blank=True, max_length=400, verbose_name='タイトル')),
                ('details', models.TextField(blank=True, verbose_name='説明文')),
                ('publish_at', models.DateTimeField(blank=True, null=True, verbose_name='公開日')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_list', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'YoutubeのMedia情報',
                'verbose_name_plural': 'YoutubeのMedia情報',
            },
        ),
        migrations.CreateModel(
            name='YoutubeToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100, unique=True, verbose_name='ユーザID')),
                ('email', models.CharField(max_length=400, verbose_name='Email')),
                ('user_name', models.CharField(max_length=400, verbose_name='ユーザ名')),
                ('token', models.CharField(max_length=400, verbose_name='アクセストークン')),
                ('refresh', models.CharField(blank=True, max_length=400, verbose_name='リフレッシュトークン')),
                ('type', models.CharField(blank=True, max_length=400, verbose_name='トークンタイプ')),
                ('channel_id', models.CharField(max_length=100, verbose_name='チャンネルID')),
                ('channel_name', models.CharField(max_length=100, verbose_name='チャンネル名')),
                ('playlist_id', models.CharField(max_length=100, verbose_name='プレイリストID')),
                ('expire', models.IntegerField(default=0, verbose_name='有効期限')),
                ('thumbnail', models.CharField(blank=True, max_length=400, verbose_name='チャネルサムネイル')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Youtubeトークン',
                'verbose_name_plural': 'Youtubeトークン',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='activity_genres',
            field=models.ManyToManyField(blank=True, related_name='accounts', to='web.ActivityGenre', verbose_name='活動ジャンル'),
        ),
        migrations.AddField(
            model_name='account',
            name='instagram_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instagram_accounts', to='web.InstagramToken', verbose_name='Instagram Token'),
        ),
        migrations.AddField(
            model_name='account',
            name='twitter_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='twitter_accounts', to='web.TwitterToken', verbose_name='Twitter Token'),
        ),
        migrations.AddField(
            model_name='account',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='account',
            name='youtube_token',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='youtube_accounts', to='web.YoutubeToken', verbose_name='Youtube Token'),
        ),
    ]
